#trigger github action again
name: Terraform Deployment

on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
  
jobs:
  deploy-cluster:
    runs-on: ubuntu-latest

    env:

        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-north-1

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: TF_LOG=DEBUG terraform init #-reconfigure

    - name: Terraform format
      run: terraform fmt
    
    - name: Terraform validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

    - name: Create master node first
      if: github.ref == 'refs/heads/main'
      run: terraform apply -target=aws_eks_cluster.eks_cluster -auto-approve
    
    - name: Install AWS CLI (if missing)
      run: |
        if ! command -v aws &> /dev/null; then
          echo "Installing AWS CLI..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        else
          echo "AWS CLI is already installed."
        fi

    - name: Verify AWS Identity
      run: aws sts get-caller-identity

    - name: Generate kubeconfig
      run: |
        mkdir -p $HOME/.kube
        aws eks update-kubeconfig --region eu-north-1 --name minimal-eks-cluster --kubeconfig $HOME/.kube/config
      env:
        KUBECONFIG: $HOME/.kube/config

    - name: Check EKS Cluster Status
      run: aws eks describe-cluster --name minimal-eks-cluster --query "cluster.status"

    - name: Upload kubeconfig as an artifact
      uses: actions/upload-artifact@v4   #artifact v3 has deprecated
      with:
        name: kubeconfig
        path: $HOME/.kube/config
  
  deploy-worknode:
    runs-on: ubuntu-latest
    needs: deploy-cluster
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check if kubeconfig exists
        run: |
          if [ -f "$HOME/.kube/config" ]; then
            echo "✅ kubeconfig exists!"
            cat $HOME/.kube/config
          else
            echo "❌ kubeconfig was NOT created!"
            exit 1
          fi

      - name: Download kubeconfig
        uses: actions/download-artifact@v4
        with:
          name: kubeconfig
          path: $HOME/.kube/

      - name: Set KUBECONFIG Environment Variable
        run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Verify kubectl Access
        run: kubectl get nodes

      - name: Apply Worker Nodes & Kubernetes Resources
        run: terraform apply -auto-approve